# (Pair factory token tokenBalBefore tokenBalAfter delta)
{
  storage (pair (address %factory) (address %token) (nat %tokenBalBefore) (nat %tokenBalAfter) (int %delta));
  parameter (or (or (nat %setCurBalBefore) (nat %setCurBalAfter)) (or (nat %action1) (nat %action2)));
  code { NIL operation;
         DIG 1;
         UNPAIR;
         DIP { UNPAIR 5 };
         IF_LEFT
           { IF_LEFT
               { DUP;
                 DIP { DIG 3; DROP };
                 DUG 3;
                 DROP;
                 PAIR 5;
                 DIG 1;
                 PAIR }
               { DUP;
                 DIP { DIG 4; DROP };
                 DUG 4;
                 DROP;
                 PAIR 5;
                 DIG 1;
                 PAIR } }
           { IF_LEFT
               { NIL operation;
                 NIL operation;
                 DUP 9;
                 ITER { CONS };
                 DUP 5;
                 CONTRACT %getBalance (pair address (contract nat));
                 IF_NONE
                   { PUSH string "getBalance";
                     PUSH string "ENTRY_NOT_FOUND";
                     PAIR;
                     FAILWITH }
                   {  };
                 PUSH mutez 0;
                 SELF_ADDRESS;
                 CONTRACT %setCurBalBefore nat;
                 IF_NONE
                   { PUSH string "setCurBalBefore";
                     PUSH string "ENTRY_NOT_FOUND";
                     PAIR;
                     FAILWITH }
                   {  };
                 SELF_ADDRESS;
                 PAIR;
                 TRANSFER_TOKENS;
                 CONS;
                 ITER { CONS };
                 DIP { DIG 6; DROP };
                 DUG 6;
                 NIL operation;
                 NIL operation;
                 DUP 9;
                 ITER { CONS };
                 DUP 5;
                 CONTRACT %transfer (pair address address nat);
                 IF_NONE
                   { PUSH string "transfer";
                     PUSH string "ENTRY_NOT_FOUND";
                     PAIR;
                     FAILWITH }
                   {  };
                 PUSH mutez 0;
                 DUP 5;
                 SENDER;
                 PAIR;
                 SELF_ADDRESS;
                 PAIR;
                 TRANSFER_TOKENS;
                 CONS;
                 ITER { CONS };
                 DIP { DIG 6; DROP };
                 DUG 6;
                 NIL operation;
                 NIL operation;
                 DUP 9;
                 ITER { CONS };
                 DUP 5;
                 CONTRACT %getBalance (pair address (contract nat));
                 IF_NONE
                   { PUSH string "getBalance";
                     PUSH string "ENTRY_NOT_FOUND";
                     PAIR;
                     FAILWITH }
                   {  };
                 PUSH mutez 0;
                 SELF_ADDRESS;
                 CONTRACT %setCurBalAfter nat;
                 IF_NONE
                   { PUSH string "setCurBalAfter";
                     PUSH string "ENTRY_NOT_FOUND";
                     PAIR;
                     FAILWITH }
                   {  };
                 SELF_ADDRESS;
                 PAIR;
                 TRANSFER_TOKENS;
                 CONS;
                 ITER { CONS };
                 DIP { DIG 6; DROP };
                 DUG 6;
                 DUP 5;
                 INT;
                 DUP 5;
                 INT;
                 SUB;
                 DIP { DIG 5; DROP };
                 DUG 5;
                 DROP;
                 PAIR 5;
                 DIG 1;
                 PAIR }
               { NIL operation;
                 NIL operation;
                 DUP 9;
                 ITER { CONS };
                 SELF_ADDRESS;
                 CONTRACT %setCurBalBefore nat;
                 IF_NONE
                   { PUSH string "setCurBalBefore";
                     PUSH string "ENTRY_NOT_FOUND";
                     PAIR;
                     FAILWITH }
                   {  };
                 PUSH mutez 0;
                 DUP 5;
                 TRANSFER_TOKENS;
                 CONS;
                 ITER { CONS };
                 DIP { DIG 6; DROP };
                 DUG 6;
                 PUSH nat 2;
                 DUP 5;
                 ADD;
                 NIL operation;
                 NIL operation;
                 DUP 10;
                 ITER { CONS };
                 SELF_ADDRESS;
                 CONTRACT %setCurBalAfter nat;
                 IF_NONE
                   { PUSH string "setCurBalAfter";
                     PUSH string "ENTRY_NOT_FOUND";
                     PAIR;
                     FAILWITH }
                   {  };
                 PUSH mutez 0;
                 DUP 5;
                 TRANSFER_TOKENS;
                 CONS;
                 ITER { CONS };
                 DIP { DIG 7; DROP };
                 DUG 7;
                 DROP 2;
                 PAIR 5;
                 DIG 1;
                 PAIR } } };
}

